@node Time/CTime, Time/DaysInMonth, Tie/Watch, Module List
@unnumbered format times ala POSIX asctime


@unnumberedsec NAME

Time::CTime -- format times ala POSIX asctime

@unnumberedsec SYNOPSIS

@example
use Time::CTime
 	print ctime(time);
print asctime(timelocal(time));
print strftime(template, localtime(time)); 
@end example

@unnumberedsubsec strftime conversions

@example
%%	PERCENT
%a	day of the week abbr
%A	day of the week
%b	month abbr
%B 	month
%c 	ctime format: Sat Nov 19 21:05:57 1994
%d 	numeric day of the month
%e 	DD
%D 	MM/DD/YY
%h 	month abbr
%H 	hour, 24 hour clock, leading 0@'s)
%I 	hour, 12 hour clock, leading 0@'s)
%j 	day of the year
%k 	hour
%l 	hour, 12 hour clock
%m 	month number, starting with 1
%M 	minute, leading 0@'s
%n 	NEWLINE
%o	ornate day of month -- "1st", "2nd", "25th", etc.
%p 	AM or PM 
%r 	time format: 09:05:57 PM
%R 	time format: 21:05
%S 	seconds, leading 0@'s
%t 	TAB
%T 	time format: 21:05:57
%U 	week number, Sunday as first day of week
%w 	day of the week, numerically, Sunday == 0
%W 	week number, Monday as first day of week
%x 	date format: 11/19/94
%X 	time format: 21:05:57
%y	year (2 digits)
%Y	year (4 digits)
%Z 	timezone in ascii. eg: PST
@end example

@unnumberedsec DESCRIPTION

This module provides routines to format dates.  They correspond 
to the libc routines.  &strftime() supports a pretty good set of
coversions -- more than most C libraries.
 
strftime supports a pretty good set of conversions.  

The POSIX module has very similar functionality.  You should consider
using it instead if you do not have allergic reactions to system 
libraries.

@unnumberedsec GENESIS

Written by David Muir Sharnoff <muir@@idiom.com>.

Tthe starting point for this package was a posting by 
Paul Foley <paul@@ascent.com> 
