@node Module List, (perl.info)Function Index, ,(perl.info)Top
@unnumbered Module List

This is it!  The list of the installed (documented) modules on
sampras, as of Fri Nov  8 21:40:30 PST 1996.

Texinfo source for this file was generated by krishna running
pod2texi.pl.  This info file itself was created @today{}.

@menu

* Agent:: supplies agentspace methods for perl5.
* Alias:: declare symbolic aliases for perl data
* AnyDBM_File:: provide framework for multiple DBMs
* Apache:: Perl interface to the Apache server API
* Apache/AccessLimitNum:: Limit user access by number of requests
* Apache/Authen:: Perl Apache authentication handlers
* Apache/AuthzAge:: Authorize based on age
* Apache/CGI:: Make things work with CGI.pm against Perl-Apache API
* Apache/Debug:: Utilities for debugging embedded perl code
* Apache/MsqlProxy:: Translate URI@'s into mSQL database queries
* Apache/Options:: OPT_* defines from httpd_core.h
* Apache/Registry:: Run (mostly) unaltered CGI scripts through mod_perl_fast
* Apache/SSI:: Implement Server Side Includes in Perl
* Apache/TieHandle:: tie stdio to Apache@'s i/o methods
* Archie:: Perl module to make Archie queries via Prospero requests
* AtExit:: Register a subroutine to be invoked at program-exit time.
* AutoLoader:: load functions only on demand
* AutoSplit:: split a package for autoloading
* B/Xref:: Generates cross reference reports for Perl programs
* BSD/Resource:: BSD process resource limit and priority functions
* Benchmark:: benchmark running times of code
* BitCount:: count number of "1" bits in string
* C/Scan:: scan C language files for easily recognized constructs.
* CGI:: Simple Common Gateway Interface Class
* CGI/Base:: HTTP Daemon Common Gateway Interface (CGI) Base Class
* CGI/BasePlus:: HTTP CGI Base Class with Handling of Multipart Forms
* CGI/Carp:: CGI routines for writing to the HTTPD (or other) error log
* CGI/Fast:: CGI Interface for Fast CGI
* CGI/Form:: Build Smart HTML Forms on Top of the CGI:: Modules
* CGI/Imagemap:: imagemap behavior for CGI programs
* CGI/MiniSvr:: Adds to CGI::Base the ability for a CGI script to become a mini http server.
* CGI/Out:: buffer output when building CGI programs
* CGI/Request:: Parse client request via a CGI interface
* CGI/Response:: Respond to CGI requests
* CGI/Switch:: Try more than one constructors and return the first object available
* CGI/Wrap:: buffer output when building CGI programs
* CGI/XA:: Clone of CGI.pm with less backwards compatibility and less namespace pollution
* CPAN:: query, download and build perl modules from CPAN sites
* Carp:: warn of errors (from perspective of caller)
* Color:: implements color functions and names
* Compress/Zlib:: Interface to zlib compression library
* Config:: access Perl configuration information
* ConfigFile:: Perl module to read and write Windows-like config files
* Convert/UU:: Perl module for uuencode and uudecode
* Crypt/DES:: Perl interface to DES block cipher
* Crypt/IDEA:: Perl interface to IDEA block cipher
* Cwd:: get pathname of current working directory
* DB_File:: Perl5 access to Berkeley DB
* DCE/Login:: Perl extension for interfacing to the DCE login API
* DCE/Registry:: Perl interface to DCE Registry API
* DCE/Status:: Make sense of DCE status codes
* DCE/UUID:: Misc UUID functions
* DCE/login_base:: Constants from sec_login_*.h 
* DCE/rgybase:: Constants from dce/rgybase.h
* Data/Dumper:: stringified perl data structures, suitable for both printing and eval
* Data/Flow:: Perl extension for simple-minded recipe-controlled build of data.
* Date/DateCalc:: Date Calculations
* Date/Format:: Date formating subroutines
* Date/Manip:: date manipulation routines
* Date/Parse:: Parse date strings into time values
* Des:: Des extension module for Perl
* Devel/CoreStack:: try to generate a stack dump from a core file
* Devel/DProf:: a Perl code profiler
* Devel/Peek:: A data debugging tool for the XS programmer
* Devel/SelfStubber:: generate stubs for a SelfLoading module
* Devel/Symdump:: dump symbol names or the symbol table
* Devel/TraceFuncs:: trace function calls as they happen.
* DirHandle:: supply object methods for directory handles
* DynaLoader:: Dynamically load C libraries into Perl code
* English:: use nice English (or awk) names for ugly punctuation variables
* Env:: perl module that imports environment variables
* EventServer:: the all singing, all dancing server. Handles i/o driven clients, timer driven clients, and interrupt driven clients, all at the same time. Allows user defined events also. If there are any more types of clients, please tell me.
* Exporter:: Implements default import method for modules
* ExtUtils/Embed:: Utilities for embedding Perl in C/C++ applications
* ExtUtils/Install:: install files from here to there
* ExtUtils/Liblist:: determine libraries to use and how to use them
* ExtUtils/MM_OS2:: methods to override UN*X behaviour in ExtUtils::MakeMaker
* ExtUtils/MM_Unix:: methods used by ExtUtils::MakeMaker
* ExtUtils/MM_VMS:: methods to override UN*X behaviour in ExtUtils::MakeMaker
* ExtUtils/MakeMaker:: create an extension Makefile
* ExtUtils/Manifest:: utilities to write and check a MANIFEST file
* ExtUtils/Miniperl:: write the C code for perlmain.c
* ExtUtils/Mkbootstrap:: make a bootstrap file for use by DynaLoader
* ExtUtils/Mksymlists:: write linker options files for dynamic extension
* ExtUtils/testlib:: add blib/* directories to @@INC
* Fatal:: replace functions with equivalents which succeed or die
* Fcntl:: load the C Fcntl.h defines
* File/Basename:: parse file specifications
* File/BasicFlock:: file locking with flock
* File/CheckTree:: run many filetest checks on a tree
* File/Cmp:: compare files
* File/Copy:: Copy files or filehandles
* File/CounterFile:: Persistent counter class
* File/Find:: traverse a file tree
* File/Flock:: file locking with flock
* File/Listing:: parse directory listing
* File/Path:: create or remove a series of directories
* File/PathConvert:: make an canonicalized absolute path name
* File/Recurse:: Recurse over files, performing some function.
* File/Slurp:: single call read & write file routines; read directories
* File/Tools:: This module is a wrapper for the various File moudles.
* FileCache:: keep more files open than the system permits
* FileHandle:: supply object methods for filehandles
* Filter/Util/Call:: Perl Source Filter Utility Module
* Filter/Util/Exec:: exec source filter
* Filter/cpp:: cpp source filter
* Filter/decrypt:: template for a decrypt source filter
* Filter/exec:: exec source filter
* Filter/sh:: sh source filter
* Filter/tee:: tee source filter
* FindBin:: Locate directory of original perl script
* Font/AFM:: Interface to Adobe Font Metrics files
* GD:: Interface to Gd Graphics Library
* GDBM_File:: Perl5 access to the gdbm library.
* Getopt/Long:: extended processing of command line options
* Getopt/Mixed:: getopt processing with both long and short options
* Getopt/Regex:: MISSING SHORT DESCRIPTION
* Getopt/Std:: Process single-character switches with switch clustering
* HTML/AsSubs:: functions that construct a HTML syntax tree
* HTML/Element:: Class for objects that represent HTML elements
* HTML/Entities:: Expand HTML entities in a string
* HTML/FormatPS:: Format HTML as postscript
* HTML/FormatText:: Format HTML as text
* HTML/Formatter:: Base class for HTML formatters
* HTML/HeadParser:: Parse <HEAD> section of a HTML document
* HTML/LinkExtor:: Extract links from an HTML document
* HTML/Parse:: Parse HTML text
* HTML/Parser:: SGML parser class
* HTML/QuickCheck:: a simple and fast HTML syntax checking package for perl 4 and perl 5
* HTML/Stream:: HTML output stream class, and some markup utilities
* HTML/TreeBuilder:: Parser that builds a HTML syntax tree
* HTTP/Daemon:: a simple http server class
* HTTP/Date:: date conversion routines
* HTTP/Headers:: Class encapsulating HTTP Message headers
* HTTP/Message:: Class encapsulating HTTP messages
* HTTP/Negotiate:: choose a variant of a document to serve (HTTP content negotiation)
* HTTP/Request:: Class encapsulating HTTP Requests
* HTTP/Response:: Class encapsulating HTTP Responses
* HTTP/Status:: HTTP Status code processing
* HTTPD/Authen:: HTTP server authentication class
* HTTPD/GroupAdmin:: Management of HTTP server group databases
* HTTPD/UserAdmin:: Management of HTTP server user databases
* I18N/Collate:: compare 8-bit scalar data according to the current locale
* IO:: load various IO modules
* IO/File:: supply object methods for filehandles
* IO/Handle:: supply object methods for I/O handles
* IO/Pipe:: supply object methods for pipes
* IO/Seekable:: supply seek based methods for I/O objects
* IO/Select:: OO interface to the select system call
* IO/Socket:: Object interface to socket communications
* IPC/Open2:: open a process for both reading and writing
* IPC/Open3:: open a process for reading, writing, and error handling
* Image/Size:: read the dimensions of an image in several popular formats
* IniConf:: A Module for reading .ini-style configuration files
* LWP:: Library for WWW access in Perl
* LWP/Debug:: debug routines for the libwww-perl library
* LWP/IO:: Low level I/O capability
* LWP/MediaTypes:: guess media type for a file or a URL.
* LWP/MemberMixin:: Member access mixin class
* LWP/Protocol:: Base class for LWP protocols
* LWP/RobotUA:: A class for Web Robots
* LWP/Simple:: Procedural LWP interface
* LWP/Socket:: TCP/IP socket interface
* LWP/TkIO:: Tk I/O routines for the LWP library
* LWP/UserAgent:: A WWW UserAgent class
* Log/Topics:: control flow of logging messages
* Logfile:: Perl extension for generating reports from logfiles
* MD5:: Perl interface to the RSA Data Security Inc. MD5 Message-Digest Algorithm
* MIME/Base64:: Encode string using base64 encoding
* MIME/Body:: the body of a MIME message
* MIME/Decoder:: an object for decoding the body part of a MIME stream
* MIME/Entity:: class for parsed-and-decoded MIME message
* MIME/Field/ConTraEnc:: a "Content-transfer-encoding" field
* MIME/Field/ContDisp:: a "Content-disposition" field
* MIME/Field/ContType:: a "Content-type" field
* MIME/Field/ParamVal:: subclass of Mail::Field, for structured MIME fields
* MIME/Head:: MIME message header (a subclass of Mail::Header)
* MIME/IO:: a small package for turning things into IO handles
* MIME/Latin1:: translate ISO-8859-1 into 7-bit approximations
* MIME/OLD/ParserUtil:: MIME-parser configuration
* MIME/Parser:: split MIME mail into decoded components
* MIME/ParserBase:: abstract class for parsing MIME mail
* MIME/QuotedPrint:: Encode string using quoted-printable encoding
* MIME/ToolUtils:: MIME-tools kit configuration and utilities
* MLDBM:: store multi-level hash structure in single level tied hash
* Mail/Address:: Parse mail addresses
* Mail/Cap:: Parse mailcap files
* Mail/Field:: Base class for manipulation of mail header fields
* Mail/Folder:: A folder-independant interface to email folders.
* Mail/Folder/Emaul:: An Emaul folder interface for Mail::Folder.
* Mail/Folder/Mbox:: A Unix mbox interface for Mail::Folder.
* Mail/Header:: manipulate mail RFC822 compliant headers
* Mail/Internet:: manipulate Internet format (RFC 822) mail messages
* Mail/MIME:: manipulate MIME (RFC 1521) mail messages
* Mail/Mailer:: Simple interface to electronic mailing mechanisms 
* Mail/POP3Client:: Perl 5 module to talk to a POP3 (RFC1081) server
* Mail/Send:: Simple electronic mail interface
* Mail/Util:: mail utility functions
* Make:: module for processing makefiles 
* Math/Amoeba:: MISSING SHORT DESCRIPTION
* Math/Approx:: Math::Approx
* Math/BigFloat:: Arbitrary length float math package
* Math/BigInt:: Arbitrary size integer math package
* Math/BigInteger:: Arbitrary length integer extension module for Perl
* Math/Brent:: MISSING SHORT DESCRIPTION
* Math/Complex:: complex numbers and associated mathematical functions
* Math/DVector:: Fast, compact vectors using arrays of double.
* Math/Derivative:: MISSING SHORT DESCRIPTION
* Math/Fortran:: MISSING SHORT DESCRIPTION
* Math/Matrix:: Multiply and invert Matrices
* Math/PRSG:: Perl interface to pseudo random sequence generator function.
* Math/Spline:: MISSING SHORT DESCRIPTION
* Math/Trig:: MISSING SHORT DESCRIPTION
* Math/TrulyRandom:: Perl interface to a truly random number generator function
* Math/VecStat:: MISSING SHORT DESCRIPTION
* Mmap:: uses mmap to map in a file as a perl variable
* Msql/RDBMS:: Relational Database Management System for Msql
* NDBM_File:: Tied access to ndbm files
* NNML/Server:: a minimal NNTP server
* Net/Cmd:: Network Command class (as used by FTP, SMTP etc)
* Net/Domain:: Attempt to evaluate the current host@'s internet name and domain
* Net/DummyInetd:: A dummy Inetd server
* Net/FTP:: FTP Client class
* Net/NIS:: Interface to Sun@'s Network Information Service
* Net/NISPlus/Table:: MISSING SHORT DESCRIPTION
* Net/NISTable:: Object Interface to Sun@'s Network Information Service
* Net/NNTP:: NNTP Client class
* Net/Netrc:: OO interface to users netrc file
* Net/POP3:: Post Office Protocol 3 Client class (RFC1081)
* Net/Ping:: check a host for upness
* Net/SMTP:: Simple Mail transfer Protocol Client
* Net/SNPP:: Simple Network Pager Protocol Client
* Net/SSLeay:: Perl extension for using Eric Young@'s implementation of SSL
* Net/Socket:: TEMPORARY Socket filedescriptor class, so Net::FTP still works while IO::Socket is having a re-fit <GBARR>
* Net/Telnet:: Defines constants for the telnet protocol
* Net/Time:: time and daytime network client interface
* News/NNTPClient:: Perl 5 module to talk to NNTP (RFC977) server
* News/Newsrc:: manage newsrc files
* ODBM_File:: Tied access to odbm files
* OS2/Attrib:: Get or set OS/2 file attributes
* OS2/SoftInstaller:: Perl extension for generation of daughter packages for IBM@'s Software Installer.
* Opcode:: Disable named opcodes when compiling perl code
* PDL:: Perl Data Language extension module
* PGP:: perl module to work with PGP messages
* POSIX:: Perl interface to IEEE Std 1003.1
* Parext:: Parity (odd/even) handling functions
* Pari:: Perl interface to PARI.
* Parity:: Parity (mark/space) handling functions
* Penguin/Easy:: provides easy access to Penguin module.
* Pg:: Perl extension for Postgres95
* Pod/Parse:: Parse the pod (Plain Old Documentation) portion of a file
* Pod/Parser:: base class for creating pod filters and translators
* Pod/Select:: function to extract selected sections of pod documentation
* Pod/Text:: convert POD data to formatted ASCII text
* Pod/Usage:: print a usage message using a script@'s embedded pod documentation
* Pod/foo:: MISSING SHORT DESCRIPTION
* Pod/newrun:: how to execute the Perl interpreter
* Pod/newvar:: Perl predefined variables
* Pod/newvar2:: Perl predefined variables
* Pod/test:: MISSING SHORT DESCRIPTION
* Proc/Forkfunc:: fork off a function
* Proc/Simple:: launch and control background processes
* Religion:: Generate tracebacks and create and install die() and  warn() handlers.
* Remedy/Ar:: Interface to Remedy@'s Action Request (Version 1.2)
* Resources:: handling application defaults in Perl.
* SDBM_File:: Tied access to sdbm files
* SHA:: Perl interface to the NIST Secure Hash Algorithm
* Safe:: Compile and execute code in restricted compartments
* Search/Base:: provide framework for multiple searches
* Search/Dict:: search for key in dictionary file
* SelectSaver:: save and restore selected file handle
* SelfLoader:: load functions only on demand
* Set/IntSpan:: Manages sets of integers
* Shell:: run shell commands transparently within perl
* Socket:: load the C socket.h defines and structure manipulators 
* Sort/Versions:: a perl 5 module for sorting of revision-like numbers
* Sprite:: Perl 5.0 module to manipulate text delimited databases.
* Statistics/ChiSquare:: How random is your data?
* Statistics/LTU:: An implementation of Linear Threshold Units
* Storable:: persistency for perl data structures
* String/Scanf:: emulate the sscanf() of the C stdio library
* Sx:: front-end to all the Athena and Xlib garbage for Perl GUI progamming
* Sybase/BCP:: Simple front end to the Sybase BCP API
* Sybase/Login:: A highly configurable Login widget for Sybperl and Perl/Tk
* Symbol:: manipulate Perl symbols and their names
* Sys/Hostname:: Try every conceivable way to get hostname
* Sys/Syslog:: Perl interface to the UNIX syslog(3) calls
* SysV:: MISSING SHORT DESCRIPTION
* SyslogScan/ByGroup:: Organizes a Summary of mail statistics into Groups of related e-mail users
* SyslogScan/Delivery:: encapsulates a logged, successful delivery of mail from a sender to a list of recipients.
* SyslogScan/DeliveryIterator:: scans a syslog file for "deliveries", successful transfers of mail to mailboxes or to other machines.
* SyslogScan/SendmailLine:: Enhances basic SyslogEntry parsing by understanding sendmail to/from message syntax.
* SyslogScan/SendmailLineFrom:: encapsulates a @'From:@' line in a syslog file
* SyslogScan/SendmailLineTo:: encapsulates a @'To:@' line in a syslog file
* SyslogScan/SendmailUtil:: utilities for sendmail packages.
* SyslogScan/Summary:: encapsulates a tally of how many bytes people have sent and received through sendmail
* SyslogScan/SyslogEntry:: parses generic lines in syslog files.
* SyslogScan/Usage:: encapsulates the total volumes of mail broadcast, sent, and received through sendmail by a single user or group.
* SyslogScan/WhereIs:: return full path of syslog file where mail messages are logged
* Tcl:: Tcl extension module for Perl
* Tcl/Tk:: MISSING SHORT DESCRIPTION
* Term/Cap:: Perl termcap interface
* Term/Complete:: Perl word completion module
* Term/ReadKey:: A perl module for simple terminal control
* Term/ReadLine:: Perl interface to various @code{readline} packages. If no real package is found, substitutes stubs instead of basic functions.
* Test/Harness:: run perl standard test scripts with statistics
* Text/Abbrev:: create an abbreviation table from a list
* Text/English:: Porter@'s stemming algorithm
* Text/German:: German grundform reduction
* Text/ParseWords:: parse text into an array of tokens
* Text/Soundex:: Implementation of the Soundex Algorithm as Described by Knuth
* Text/Tabs:: expand and unexpand tabs per the unix expand(1) and unexpand(1)
* Text/Template:: Expand template text with embedded Perl
* Text/Wrap:: line wrapping to form simple paragraphs
* Tie/Dir:: class definition for reading directories via a tied hash
* Tie/Hash:: base class definitions for tied hashes
* Tie/Scalar:: base class definitions for tied scalars
* Tie/SubstrHash:: Fixed-table-size, fixed-key-length hashing
* Tie/Watch:: place watchpoints on Perl variables.
* Time/CTime:: format times ala POSIX asctime
* Time/DaysInMonth:: simply report the number of days in a month
* Time/HiRes:: Perl extension for ualarm, usleep, and gettimeofday
* Time/JulianDay:: Julian calendar manipulations
* Time/Local:: efficiently compute time from local and GMT time
* Time/ParseDate:: date parsing both relative and absolute
* Time/Timezone:: miscellaneous timezone manipulations routines
* Time/Zone:: miscellaneous timezone manipulations routines
* Tk/FileDialog:: A highly configurable File Dialog widget for Perl/Tk.  
* Tk/SelFile:: a widget for choosing a file to read or write
* Tk/WaitBox:: An Object Oriented Wait Dialog for Perl/Tk, of the Please Wait variety.
* UNIVERSAL:: base class for ALL classes (blessed references)
* URI/Escape:: Escape unsafe characters
* URI/URL:: Uniform Resource Locators (absolute and relative)
* VRML:: implements VRML primitives and extensions
* VRML/VRML1:: implements VRML methods with the VRML 1.x standard
* VRML/VRML1/Standard:: implements nodes the VRML 1.x standard
* WWW/RobotRules:: Parse robots.txt files
* WWW/RobotRules/AnyDBM_File:: Persistent RobotRules
* WWW/Search:: Virtual base class for WWW searches
* WWW/Search/AltaVista:: class for searching Alta Vista 
* WWW/SearchResult:: class for results returned from WWW::Search
* Xbase:: Perl Module to Read Xbase DBF Files and Foxpro IDX indexes
* diagnostics:: Perl compiler pragma to force verbose warning diagnostics
* gettext:: message handling functions
* integer:: Perl pragma to compute arithmetic in integer instead of double
* iodbc:: Perl extension for the iODBC API
* less:: perl pragma to request less of something from the compiler
* lib:: manipulate @@INC at compile time
* lwpcook:: libwww-perl cookbook
* ops:: Perl pragma to restrict unsafe operations when compiling
* overload:: Package for overloading perl operations
* ptkFAQ:: ptkFAQ
* sigtrap:: Perl pragma to enable simple signal handling
* strict:: Perl pragma to restrict unsafe constructs
* subs:: Perl pragma to predeclare sub names
* vars:: Perl pragma to predeclare global variable names
@end menu
